#include <gonggettext.h>
#include "depositfrmestadcompraventa.h"

namespace gong {
namespace deposit {


FrmEstadCompraVenta::FrmEstadCompraVenta(QWidget * parent, WidgetFlags fl)
	: factu::FrmEstadCompraVenta( parent, fl )
{
	XtringList liqoptions;
	liqoptions << _("Todo lo liquidado y no liquidado") << _("Sólo lo liquidado") << _("Sólo lo no liquidado");
	pGroupLiquidacion = addGroupBox(0, liqoptions, _("Liquidaciones"), 0 );
	pCheckIncLiquidacionProveedora = addCheckBox( 0, _("Incluir liquidación a la proveedora"), false );
}

Xtring FrmEstadCompraVenta::getExtraSQL(ExtraSQLWhat what)
{
	Xtring ret;
	switch( what ) {
		case VentasAlbaranesWhere:
		case VentasFacturasWhere:
			switch( pGroupLiquidacion->getSelectedPos() ) {
				case 0: // Todo
					break;
				case 1: // Liquidadas
					ret = "AVD.LIQUIDACIONCOMPRA_ID IS NOT NULL";
					break;
				case 2: // No liquidadas
					ret = "AVD.LIQUIDACIONCOMPRA_ID IS NULL";
					break;
			}
			if( what == VentasFacturasWhere )
				ret.replace( "AVD.", "FVD.");
			break;
		case ComprasAlbaranesWhere:
		case ComprasFacturasWhere:
		case VentasAlbaranesFrom:
		case ComprasAlbaranesFrom:
		case ComprasFacturasFrom:
		case VentasFacturasFrom:
		case AnotherUnionAll:
			break;
	}
	return ret;
}


Xtring FrmEstadCompraVenta::createRTK(const Xtring &_template,
									  Xtring &from, Xtring &where,
									  const Xtring &_compras_where, const Xtring &_ventas_where,
									  Xtring &titulo)
{
	Xtring rtk;
	if( pCheckResumido->isOn() )
		rtk = factu::FrmEstadCompraVenta::createRTK( "depositestadcompraventa_resumido.inc", from,
													 where, _compras_where, _ventas_where, titulo);
	else
		rtk = factu::FrmEstadCompraVenta::createRTK( "depositestadcompraventa.inc", from,
													 where, _compras_where, _ventas_where, titulo);
	if ( pCheckIncLiquidacionProveedora->isOn() ) {
		// Las compras no tienen liquidaciones
		rtk.replace("SELECT SUM(FCD.CANTIDAD) AS CANTIDAD,", "SELECT 0 AS IMPORTELIQUIDACION, 0 AS IMPORTELIQUIDACIONIVA, SUM(FCD.CANTIDAD) AS CANTIDAD,");
		rtk.replace("SELECT SUM(ACD.CANTIDAD) AS CANTIDAD,", "SELECT 0 AS IMPORTELIQUIDACION, 0 AS IMPORTELIQUIDACIONIVA, SUM(ACD.CANTIDAD) AS CANTIDAD,");
		// Las ventas sí
		rtk.replace("SELECT SUM(FVD.CANTIDAD) AS CANTIDAD,", "SELECT SUM(FVD.IMPORTELIQUIDACION) AS IMPORTELIQUIDACION, SUM(FVD.IMPORTELIQUIDACIONIVA) AS IMPORTELIQUIDACIONIVA, SUM(FVD.CANTIDAD) AS CANTIDAD,");
		rtk.replace("SELECT SUM(AVD.CANTIDAD) AS CANTIDAD,", "SELECT SUM(AVD.IMPORTELIQUIDACION) AS IMPORTELIQUIDACION, SUM(AVD.IMPORTELIQUIDACIONIVA) AS IMPORTELIQUIDACIONIVA, SUM(AVD.CANTIDAD) AS CANTIDAD,");
		rtk.replace("SELECT -SUM(FVD.CANTIDAD) AS CANTIDAD,", "SELECT -SUM(FVD.IMPORTELIQUIDACION) AS IMPORTELIQUIDACION, -SUM(FVD.IMPORTELIQUIDACIONIVA) AS IMPORTELIQUIDACIONIVA, -SUM(FVD.CANTIDAD) AS CANTIDAD,");
		rtk.replace("SELECT -SUM(AVD.CANTIDAD) AS CANTIDAD,", "SELECT -SUM(AVD.IMPORTELIQUIDACION) AS IMPORTELIQUIDACION, -SUM(AVD.IMPORTELIQUIDACIONIVA) AS IMPORTELIQUIDACIONIVA, -SUM(AVD.CANTIDAD) AS CANTIDAD,");
	}
	if( pCheckIncLiquidacionProveedora->isOn() )
		rtk = "#define INCLIQUIDACION\n" + rtk;
//	FrmBase::msgOkLarge( this, "", "", rtk );
	return rtk;
}


#if 0
SELECT * FROM ARTICULO A INNER JOIN (
SELECT SUM(AVD.IMPORTELIQUIDACION) AS IMPORTELIQUIDACION, SUM(AVD.IMPORTELIQUIDACIONIVA) AS IMPORTELIQUIDACIONIVA, SUM(AVD.CANTIDAD) AS CANTIDAD, SUM(AVD.IMPORTE) AS IMPORTE, SUM(AVD.IMPORTECONIVA) AS IMPORTECONIVA, AVD.COSTESINIVA AS PRECIOSINIVA, AVD.COSTE AS PRECIOCONIVA, AVD.DTOP100, AVD.TIPOIVA_ID, TIPOIVA.CODIGO AS TIPOIVA_CODIGO, AVD.ARTICULO_ID, AV.FECHA, 'Ac' AS TIPO, AV.NUMERO, TIPODOC.NOMBRE AS TIPODOC, PROVEEDORA.CODIGO AS RAZONSOCIAL_CODIGO, PROVEEDORA.RAZONSOCIAL AS RAZONSOCIAL, PROVEEDORA.ID AS RAZONSOCIAL_ID, TIPODOC.ID AS TIPODOC_ID, AVD.NOTAS AS NOTAS
    FROM ALBARANCOMPRADET AVD INNER JOIN ALBARANCOMPRA AV ON AVD.ALBARANCOMPRA_ID=AV.ID AND AV.FACTURADO=0
        INNER JOIN TIPODOC ON TIPODOC.ID = AV.TIPODOC_ID
        INNER JOIN TIPOIVA ON TIPOIVA.ID = AVD.TIPOIVA_ID
        INNER JOIN PROVEEDORA ON AV.PROVEEDORA_ID = PROVEEDORA.ID
    WHERE (PROVEEDORA.ID IN(1)) AND AV.EMPRESA_ID=1
    GROUP BY AVD.ID, AVD.COSTESINIVA, AVD.DTOP100, AVD.TIPOIVA_ID
UNION ALL
SELECT SUM(FVD.IMPORTELIQUIDACION) AS IMPORTELIQUIDACION, SUM(FVD.IMPORTELIQUIDACIONIVA) AS IMPORTELIQUIDACIONIVA, SUM(FVD.CANTIDAD) AS CANTIDAD, SUM(FVD.IMPORTE) AS IMPORTE, SUM(FVD.IMPORTECONIVA) AS IMPORTECONIVA, FVD.COSTESINIVA AS PRECIOSINIVA, FVD.COSTE AS PRECIOCONIVA, FVD.DTOP100, FVD.TIPOIVA_ID, TIPOIVA.CODIGO AS TIPOIVA_CODIGO,FVD.ARTICULO_ID, FV.FECHA, 'Fc' AS TIPO, FV.NUMERO, TIPODOC.NOMBRE AS TIPODOC, PROVEEDORA.CODIGO AS RAZONSOCIAL_CODIGO, PROVEEDORA.RAZONSOCIAL AS RAZONSOCIAL, PROVEEDORA.ID AS RAZONSOCIAL_ID, TIPODOC.ID AS TIPODOC_ID, FVD.NOTAS AS NOTAS
    FROM FACTURACOMPRADET FVD  INNER JOIN FACTURACOMPRA FV ON FVD.FACTURACOMPRA_ID=FV.ID
        INNER JOIN TIPODOC ON TIPODOC.ID = FV.TIPODOC_ID
        INNER JOIN TIPOIVA ON TIPOIVA.ID = FVD.TIPOIVA_ID
        INNER JOIN PROVEEDORA ON FV.PROVEEDORA_ID = PROVEEDORA.ID
    WHERE (PROVEEDORA.ID IN(1)) AND FV.EMPRESA_ID=1
    GROUP BY FVD.ID, FVD.COSTESINIVA, FVD.DTOP100, FVD.TIPOIVA_ID
UNION ALL
SELECT -SUM(AVD.CANTIDAD) AS CANTIDAD, -SUM(AVD.IMPORTE) AS IMPORTE, -SUM(AVD.IMPORTECONIVA) AS IMPORTECONIVA, AVD.PVPSINIVA AS PRECIOSINIVA, AVD.PVP AS PRECIOCONIVA, AVD.DTOP100, AVD.TIPOIVA_ID, TIPOIVA.CODIGO AS TIPOIVA_CODIGO, AVD.ARTICULO_ID, AV.FECHA, 'Av' AS TIPO, AV.NUMERO, TIPODOC.NOMBRE AS TIPODOC, CLIENTE.CODIGO AS RAZONSOCIAL_CODIGO, CLIENTE.RAZONSOCIAL AS RAZONSOCIAL, CLIENTE.ID AS RAZONSOCIAL_ID, TIPODOC.ID AS TIPODOC_ID, AVD.NOTAS AS NOTAS
    FROM ALBARANVENTADET AVD  INNER JOIN ALBARANVENTA AV ON AVD.ALBARANVENTA_ID=AV.ID AND AV.FACTURADO=0
        INNER JOIN TIPODOC ON TIPODOC.ID = AV.TIPODOC_ID
        INNER JOIN TIPOIVA ON TIPOIVA.ID = AVD.TIPOIVA_ID
        INNER JOIN CLIENTE ON AV.CLIENTE_ID = CLIENTE.ID
    WHERE (CLIENTE.ID IN(13)) AND AV.EMPRESA_ID=1
    GROUP BY AVD.ID, AVD.PVPSINIVA, AVD.DTOP100, AVD.TIPOIVA_ID
UNION ALL
SELECT -SUM(FVD.CANTIDAD) AS CANTIDAD, -SUM(FVD.IMPORTE) AS IMPORTE, -SUM(FVD.IMPORTECONIVA) AS IMPORTECONIVA, FVD.PVPSINIVA AS PRECIOSINIVA, FVD.PVP AS PRECIOCONIVA, FVD.DTOP100, FVD.TIPOIVA_ID, TIPOIVA.CODIGO AS TIPOIVA_CODIGO, FVD.ARTICULO_ID, FV.FECHA, 'Fv' AS TIPO, FV.NUMERO, TIPODOC.NOMBRE AS TIPODOC, CLIENTE.CODIGO AS RAZONSOCIAL_CODIGO, CLIENTE.RAZONSOCIAL AS RAZONSOCIAL, CLIENTE.ID AS RAZONSOCIAL_ID, TIPODOC.ID AS TIPODOC_ID, FVD.NOTAS AS NOTAS
    FROM FACTURAVENTADET FVD
        INNER JOIN FACTURAVENTA FV ON FVD.FACTURAVENTA_ID=FV.ID
        INNER JOIN TIPODOC ON TIPODOC.ID = FV.TIPODOC_ID
        INNER JOIN TIPOIVA ON TIPOIVA.ID = FVD.TIPOIVA_ID
        INNER JOIN CLIENTE ON FV.CLIENTE_ID = CLIENTE.ID
    WHERE (CLIENTE.ID IN(13)) AND FV.EMPRESA_ID=1
    GROUP BY FVD.ID, FVD.PVPSINIVA, FVD.DTOP100, FVD.TIPOIVA_ID
) VT ON VT.ARTICULO_ID = A.ID
#endif


} // namespace deposit
} // namespace gong
